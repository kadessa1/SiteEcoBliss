{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-16T21:39:56.921Z",
    "end": "2024-02-16T21:40:19.606Z",
    "duration": 22685,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "31a019fb-e018-4b41-9a9c-60dad1002a0f",
      "title": "",
      "fullFile": "cypress\\e2e\\SCENARIO\\cart_2p2q.cy.js",
      "file": "cypress\\e2e\\SCENARIO\\cart_2p2q.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d553412d-58e8-4094-9f02-20e4464797b8",
          "title": "adding a product to the cart",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login test true",
              "fullTitle": "adding a product to the cart login test true",
              "timedOut": null,
              "duration": 1571,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'http://localhost:8081/login',\n  body: {\n    username: 'test2@test.fr',\n    password: 'testtest'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('token');\n  authToken = response.body.token;\n});",
              "err": {},
              "uuid": "7741503f-d377-41f1-b28f-151bdc9152b0",
              "parentUUID": "d553412d-58e8-4094-9f02-20e4464797b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify order lines",
              "fullTitle": "adding a product to the cart verify order lines",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'http://localhost:8081/orders',\n  headers: {\n    Authorization: `Bearer ${authToken}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  orderLines = response.body.orderLines;\n  orderLines.forEach(line => {\n    cy.request({\n      method: 'DELETE',\n      url: 'http://localhost:8081/orders/' + line.id + '/delete',\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "7f7cf9f8-7792-4583-8541-2f373c37cb99",
              "parentUUID": "d553412d-58e8-4094-9f02-20e4464797b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "adding a product to the cart",
              "fullTitle": "adding a product to the cart adding a product to the cart",
              "timedOut": null,
              "duration": 15935,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _connection.connexion)();\n//On va sur la page des produits pour sélectionner le premier\ncy.get('[data-cy=\"nav-link-products\"]').click();\ncy.get('button').eq(7).should('contain', 'Consulter').click();\n//On vérifie la quantité en stock avant ajout au panier\ncy.wait(1000);\ncy.get('[data-cy=\"detail-product-stock\"]').invoke('text').then(qttAvant1 => {\n  stockAvant1 = parseInt(qttAvant1.split(' ')[0]);\n});\n//On ajoute au panier plusieurs quantités d'un même produit  \ncy.get('[data-cy=\"detail-product-quantity\"]').click();\ncy.get('[data-cy=\"detail-product-quantity\"]').clear();\ncy.get('[data-cy=\"detail-product-quantity\"]').type('2');\ncy.get('[data-cy=\"detail-product-add\"]').click();\n//On va sur le panier vérifier que le produit a bien été ajouté \ncy.get('[data-cy=\"nav-link-cart\"]').click();\ncy.contains('Vos informations').should('exist');\ncy.contains('Aurore boréale').should('be.visible');\ncy.get('input').eq(0).invoke('val').then(qttCart1 => {\n  stockCart1 = parseInt(qttCart1.split(' ')[0]);\n});\n//On retourne sur la page du produit pour vérifier que la quantité a bien diminué    \ncy.get('[data-cy=\"nav-link-products\"]').click();\ncy.get('button').eq(7).should('contain', \"Consulter\").click();\ncy.wait(1000);\ncy.get('[data-cy=\"detail-product-stock\"]').invoke('text').then(qttApres1 => {\n  stockApres1 = parseInt(qttApres1.split(' ')[0]);\n  expect(stockApres1 + stockCart1).to.equal(stockAvant1);\n});\n//On va sur la page des produits pour sélectionner le second\ncy.get('[data-cy=\"nav-link-products\"]').click();\ncy.get('button').eq(4).should('contain', 'Consulter').click();\n//On vérifie la quantité en stock avant ajout au panier\ncy.wait(1000);\ncy.get('[data-cy=\"detail-product-stock\"]').invoke('text').then(qttAvant2 => {\n  stockAvant2 = parseInt(qttAvant2.split(' ')[0]);\n});\n//On ajoute au panier plusieurs quantités d'un même produit\ncy.get('[data-cy=\"detail-product-quantity\"]').click();\ncy.get('[data-cy=\"detail-product-quantity\"]').clear();\ncy.get('[data-cy=\"detail-product-quantity\"]').type('2');\ncy.get('[data-cy=\"detail-product-add\"]').click();\n//On va sur le panier vérifier que le produit a bien été ajouté \ncy.get('[data-cy=\"nav-link-cart\"]').click();\ncy.contains('Vos informations').should('exist');\ncy.contains('Extrait de nature').should('be.visible');\ncy.get('input').eq(1).invoke('val').then(qttCart2 => {\n  stockCart2 = parseInt(qttCart2.split(' ')[0]);\n});\n//On retourne sur la page du produit pour vérifier que la quantité a bien diminué    \ncy.get('[data-cy=\"nav-link-products\"]').click();\ncy.get('button').eq(4).should('contain', \"Consulter\").click();\ncy.wait(1000);\ncy.get('[data-cy=\"detail-product-stock\"]').invoke('text').then(qttApres2 => {\n  stockApres2 = parseInt(qttApres2.split(' ')[0]);\n  expect(stockApres2 + stockCart2).to.equal(stockAvant2);\n});",
              "err": {},
              "uuid": "7e74a5e5-b595-47cb-862c-9b0e4408e3a0",
              "parentUUID": "d553412d-58e8-4094-9f02-20e4464797b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login test true",
              "fullTitle": "adding a product to the cart login test true",
              "timedOut": null,
              "duration": 774,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'http://localhost:8081/login',\n  body: {\n    username: 'test2@test.fr',\n    password: 'testtest'\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('token');\n  authToken = response.body.token;\n});",
              "err": {},
              "uuid": "7ef22a4f-e390-4d8f-95a0-e0a350a2e9c2",
              "parentUUID": "d553412d-58e8-4094-9f02-20e4464797b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify order lines",
              "fullTitle": "adding a product to the cart verify order lines",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'http://localhost:8081/orders',\n  headers: {\n    Authorization: `Bearer ${authToken}`\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  response.body.orderLines.forEach(orderLine => {\n    if (orderLine.product.id === 10) {\n      expect(orderLine.quantity).to.be.equal(2);\n    }\n    if (orderLine.product.id === 7) {\n      expect(orderLine.quantity).to.be.equal(2);\n    }\n  });\n});",
              "err": {},
              "uuid": "88c7b8ad-d2cf-4303-90d7-878cbc05b358",
              "parentUUID": "d553412d-58e8-4094-9f02-20e4464797b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7741503f-d377-41f1-b28f-151bdc9152b0",
            "7f7cf9f8-7792-4583-8541-2f373c37cb99",
            "7e74a5e5-b595-47cb-862c-9b0e4408e3a0",
            "7ef22a4f-e390-4d8f-95a0-e0a350a2e9c2",
            "88c7b8ad-d2cf-4303-90d7-878cbc05b358"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/report/mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}